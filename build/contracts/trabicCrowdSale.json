{
  "contractName": "trabicCrowdSale",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "rate",
          "type": "uint256"
        }
      ],
      "name": "setRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "contributions",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenSalePercentage",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "foundersPercentage",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isWhitelister",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "foundationPercentage",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelister",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "investorMinCap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "finalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "getUserContribution",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "refundee",
          "type": "address"
        }
      ],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stage",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceWhitelisted",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addWhitelister",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "investorHardCap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partnersPercentage",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_rate",
          "type": "uint256"
        },
        {
          "name": "_wallet",
          "type": "address"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_cap",
          "type": "uint256"
        },
        {
          "name": "openingTime",
          "type": "uint256"
        },
        {
          "name": "closingTime",
          "type": "uint256"
        },
        {
          "name": "_goal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "CrowdsaleFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelistedRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelisterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "WhitelisterRemoved",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_stage",
          "type": "uint256"
        }
      ],
      "name": "setCrowdSaleStage",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"hasClosed\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stage\",\"type\":\"uint256\"}],\"name\":\"setCrowdSaleStage\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"rate\",\"type\":\"uint256\"}],\"name\":\"setRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"goal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenSalePercentage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finalize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"capReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foundersPercentage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isWhitelister\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"goalReached\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"foundationPercentage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelister\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investorMinCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"finalized\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"openingTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"getUserContribution\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"refundee\",\"type\":\"address\"}],\"name\":\"claimRefund\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceWhitelisted\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addWhitelister\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"investorHardCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"partnersPercentage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_rate\",\"type\":\"uint256\"},{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_cap\",\"type\":\"uint256\"},{\"name\":\"openingTime\",\"type\":\"uint256\"},{\"name\":\"closingTime\",\"type\":\"uint256\"},{\"name\":\"_goal\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"CrowdsaleFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelistedRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelisterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"WhitelisterRemoved\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"cap()\":{\"return\":\"the cap of the crowdsale.\"},\"capReached()\":{\"details\":\"Checks whether the cap has been reached.\",\"return\":\"Whether the cap was reached\"},\"claimRefund(address)\":{\"details\":\"Investors can claim refunds here if crowdsale is unsuccessful\",\"params\":{\"refundee\":\"Whose refund will be claimed.\"}},\"closingTime()\":{\"return\":\"the crowdsale closing time.\"},\"finalize()\":{\"details\":\"Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function.\"},\"finalized()\":{\"return\":\"true if the crowdsale is finalized, false otherwise.\"},\"goal()\":{\"return\":\"minimum amount of funds to be raised in wei.\"},\"goalReached()\":{\"details\":\"Checks whether funding goal was reached.\",\"return\":\"Whether funding goal was reached\"},\"hasClosed()\":{\"details\":\"Checks whether the period in which the crowdsale is open has already elapsed.\",\"return\":\"Whether crowdsale period has elapsed\"},\"isOpen()\":{\"return\":\"true if the crowdsale is open, false otherwise.\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"openingTime()\":{\"return\":\"the crowdsale opening time.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"rate()\":{\"return\":\"the number of token units a buyer gets per wei.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"token()\":{\"return\":\"the token being sold.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}},\"wallet()\":{\"return\":\"the address where funds are collected.\"},\"weiRaised()\":{\"return\":\"the amount of wei raised.\"}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"setRate(uint256)\":{\"notice\":\"// Added by Nasir due to need of changes in Rate of Token ////\"}}}},\"settings\":{\"compilationTarget\":{\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/contracts/TrabicCrowdSale.sol\":\"trabicCrowdSale\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/contracts/TrabicCrowdSale.sol\":{\"keccak256\":\"0xd259af595a940877cfd7db0b9f7acd1f833275dbe3f8c80c9eac2f9d1183ab46\",\"urls\":[\"bzzr://508b506688fc75a7fed2393887ca0b3954058fb733387f4a3f1e0d9162365254\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xfd1a32f8cf3a9ba334f62c00ca5f725823064f2e02f29f60074278261307c1b1\",\"urls\":[\"bzzr://575a95979ff84ceed5592d89c909aebe18a6517ae18f460421b01b2fc1b1f03d\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x6fba6fd5ec9dd35abd15ec888528c9f19689c1fad631aeb4900a584a0b54650d\",\"urls\":[\"bzzr://361e949b5a03dc7bcdb03ac0d2bef04fdbd67aee780fc61e62510a1759f86de3\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0xe986538ab0588f0c546a07eb83486846b546d72756859aad4c8d78a60340f49b\",\"urls\":[\"bzzr://5843f33e342fd2e742db8c74f1b788f5352f07e09f3d1748e51ddb0bdd826174\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/access/roles/WhitelistedRole.sol\":{\"keccak256\":\"0xf3a86c92a36edbe32737a35843cd64d45e644a5c63ab7949889d3262362baf8c\",\"urls\":[\"bzzr://bcd72db5362aef3032595492f893d3832ad92cc297b64d479b8f7fc19403b85e\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/access/roles/WhitelisterRole.sol\":{\"keccak256\":\"0x1ccdd92c34278f17bdbc3c1a85e3031c8d8bb8ee96b4137d7888a10ed298bec8\",\"urls\":[\"bzzr://85bf7b389312629b06c5435509738d33d3f442350bdcd232f40fabf50b2e9c07\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0x84ae84217a2830fabe36c1d20aa31709a0e4c96796d456f0dd61382d506930ad\",\"urls\":[\"bzzr://3206c820f4884bcad543108dd63b129d8a9aedd00aa662765f21473607df8f8c\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/FinalizableCrowdsale.sol\":{\"keccak256\":\"0x9509decdb69abc4192dddebe6426d5673ce30f291ef0724ca66a4e19de15c654\",\"urls\":[\"bzzr://091279c9b8ac2ac972c374f1bc2c3fc9d74f6fa1a1535be9805703bf31da8352\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol\":{\"keccak256\":\"0x0e334805dbddf96ababd37d8bcf4d5bbf99c80410cf8fa607a2b57022107e61f\",\"urls\":[\"bzzr://84bbff99ec2c4ea91d25fcb390e2d97d79ecb4a5ad31e52ebd00e19787e18ffa\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\":{\"keccak256\":\"0xc1f0f000b77a50853bacd1cc6c616aa6b4d304540c6d468eb85fd2cf2bbe997a\",\"urls\":[\"bzzr://43f96eed1e3cccb2cfe3394ba4058fd3f3e12ed0317778a60a0bdd661392d02b\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\":{\"keccak256\":\"0x14897b0a599aeb2f04cfec4464d57ff6528e4fcd9503e14b89cfc1f00b24666a\",\"urls\":[\"bzzr://fd4a0089eceb064e1a43902d0672ffa20d47366ab5c3e65370672645351690f9\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\":{\"keccak256\":\"0x8b75adeb8ed0434c3ade15cc465324d976dce732a72f00472b627cccc03f779f\",\"urls\":[\"bzzr://cb254e65db6bc80de8c97498ea5316397491de930e0ec1b005428d660611f3cc\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol\":{\"keccak256\":\"0x658819b57e3a7b57294f8488da1016bc898224f16976c8632991b3a940ed627c\",\"urls\":[\"bzzr://ff79e2bcfdd7b199cbf6eb6f94059e9d5dc30df8299bf4e629118ccfef9e333e\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0xdae12d7aecde2101fd70b3c4b50d8119892f32dd81e1c049fe9c7b8103fc9129\",\"urls\":[\"bzzr://396f3d5f222cfdf1db66c351000c9818adcfb8cafee94fb7d575791f1476e5c9\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xd0bd419ccef71fb26d39b35fbc768bcdebb96baec165db8396dc1f3487817762\",\"urls\":[\"bzzr://80d5a37089d1970d161316755a83f7fea9d5456bfea516f2dd1b8b42d3eb384b\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x904e3a3795ca6b15ee3bd7ad538b955dbc3ac3135dd1a0db265ea052d5ef00af\",\"urls\":[\"bzzr://f85cb22724a4688f4cdbe663597a98eaede8d842905c2029cb1566b48052427f\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/ownership/Secondary.sol\":{\"keccak256\":\"0xcb1bb9a7d92da09c0bb26b8aff3ae7cab6f52689e2d3a7fe624de995d708bf34\",\"urls\":[\"bzzr://07f750a6a8751ecd898376861be9190ea366c49fd00feb3a013643dde2e8915c\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/payment/escrow/ConditionalEscrow.sol\":{\"keccak256\":\"0x8650e01812db2134584d1d0315ee6b54c58cfaef748c08f1904be38a2b71d1f2\",\"urls\":[\"bzzr://b97124924d20ca4a9cd83c99deb9767adadf8e6b00cae681f60d6ea3212c4b1e\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/payment/escrow/Escrow.sol\":{\"keccak256\":\"0x01f2a247ac4ad4d357a9f47d79c1b0226a57771207bdc3f9e005be388b9dde8a\",\"urls\":[\"bzzr://06e1664baf290ace47a9353bb2b813febe48db3677ca8ac2d7eecdaa61fef677\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/payment/escrow/RefundEscrow.sol\":{\"keccak256\":\"0xb1b9b149bab2e0b45d8d71981f33795a7a869a74cf3388bf3222b1dfad696edc\",\"urls\":[\"bzzr://1bc91cf4ffe90ac65ae5322fd73aa0d46385359d95f1dd703d97e7b47a0479c8\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3097096ca15251da603c659bcae56e2c41ebc4ccd8c8d91d5e6a7ab229bc7710\",\"urls\":[\"bzzr://8fe64ffc7697f531958e85cd35cecd6111b19947c8d719427e429cc56046f316\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xf88a7b8c02ed4b70ab2ae9dc21d52090d07b7910f276a3c6d6db9538564fc208\",\"urls\":[\"bzzr://60375c593b9d4f7a2f2e52fd2ac883ef9d9fe17f9559fd243c8550ead482ace6\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0x9d9cca295de455b95b446b907651f380dc21fc187f1b6998e45188d5d6306ca7\",\"urls\":[\"bzzr://03c47f79733612f42f49908685cf67aef3cd116c1857d7778b2f1f37d592f6de\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xdfab65d294180d987fedbd96f436067a7814d1dab9f6d4b6fb60ed8e0ba98d46\",\"urls\":[\"bzzr://fe7f1835891783765af9f5b8131fff1a53fd316b50dde1cf185f8f80a478f874\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xe60d3487504e2c0fbe5d27adf7003bac78efb7a257c4f888240254280a5b7f73\",\"urls\":[\"bzzr://4bdd8f6f46e20ca6604908a1b3c7a46bb4848b19567499ecd5b0870c1f893c54\"]},\"/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x5d74b6114ec325823803e4ecc95e5127008038f89dcebafd96ab79bf5c3e4819\",\"urls\":[\"bzzr://2cc284a94c0ed14c3afb5a02a094cd545fc79da0a26db800f66ee050db2f512b\"]}},\"version\":1}",
  "bytecode": "0x608060405266071afd498d00006007556802b5e3af16b18800006008556046601155600a601255600a601355600a6014556000601560006101000a81548160ff021916908360018111156200005057fe5b02179055503480156200006257600080fd5b5060405160e0806200306d83398101806040528101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050808383868a8a8a620000e33362000475640100000000026401000000009004565b6001600281905550600083111515620000fb57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200013857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200017557600080fd5b8260058190555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506000811115156200021157600080fd5b80600a819055505033600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3428210151515620002e757600080fd5b8181111515620002f657600080fd5b81600c8190555080600d8190555050506000600e60006101000a81548160ff0219169083151502179055506000811115156200033157600080fd5b6200034a620004df640100000000026401000000009004565b6200035462000661565b808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604051809103906000f080158015620003a7573d6000803e3d6000fd5b50601060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600f8190555050838110151562000468576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f43726f776446756e64696e67207265616368656420486172642043617000000081525060200191505060405180910390fd5b5050505050505062000672565b62000499816000620005096401000000000262001ab6179091906401000000009004565b8073ffffffffffffffffffffffffffffffffffffffff167f25f05eb2b87548a4d5f3b374af0482149441d4fe9264ff9be277dc1d37a3bf1a60405160405180910390a250565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156200054657600080fd5b620005618282620005cc640100000000026401000000009004565b1515156200056e57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156200060a57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b604051610d20806200234d83390190565b611ccb80620006826000396000f3006080604052600436106101d8576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806310154bad146101e35780631515bc2b14610226578063291d9549146102555780632a86e726146102985780632c4e722e146102c557806334fcf437146102f0578063355274ea1461031d5780633af32abf1461034857806340193883146103a35780634042b66f146103ce57806342e94c90146103f957806346daa2421461045057806347535d7b1461047b5780634b6753bc146104aa5780634bb278f3146104d55780634f935945146104ec578063521eb2731461051b57806353c08ea214610572578063715018a61461059d5780637d0c269f146105b45780637d3d65221461060f578063864329e31461063e5780638da5cb5b146106695780638f32d59b146106c05780639ad3a7ba146106ef578063b25d7f5414610706578063b3f05b9714610731578063b7a8807c14610760578063bb8b2b471461078b578063bffa55d5146107e2578063c040e6b814610825578063d6cd94731461085e578063eaf9144a14610875578063ec8ac4d8146108b8578063ed5db874146108ee578063f2fde38b14610919578063f45b9bed1461095c578063fc0c546a14610987575b6101e1336109de565b005b3480156101ef57600080fd5b50610224600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610adf565b005b34801561023257600080fd5b5061023b610aff565b604051808215151515815260200191505060405180910390f35b34801561026157600080fd5b50610296600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b0b565b005b3480156102a457600080fd5b506102c360048036038101908080359060200190929190505050610b2b565b005b3480156102d157600080fd5b506102da610c2e565b6040518082815260200191505060405180910390f35b3480156102fc57600080fd5b5061031b60048036038101908080359060200190929190505050610c38565b005b34801561032957600080fd5b50610332610c42565b6040518082815260200191505060405180910390f35b34801561035457600080fd5b50610389600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c4c565b604051808215151515815260200191505060405180910390f35b3480156103af57600080fd5b506103b8610c69565b6040518082815260200191505060405180910390f35b3480156103da57600080fd5b506103e3610c73565b6040518082815260200191505060405180910390f35b34801561040557600080fd5b5061043a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c7d565b6040518082815260200191505060405180910390f35b34801561045c57600080fd5b50610465610c95565b6040518082815260200191505060405180910390f35b34801561048757600080fd5b50610490610c9b565b604051808215151515815260200191505060405180910390f35b3480156104b657600080fd5b506104bf610cb6565b6040518082815260200191505060405180910390f35b3480156104e157600080fd5b506104ea610cc0565b005b3480156104f857600080fd5b50610501610d40565b604051808215151515815260200191505060405180910390f35b34801561052757600080fd5b50610530610d54565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561057e57600080fd5b50610587610d7e565b6040518082815260200191505060405180910390f35b3480156105a957600080fd5b506105b2610d84565b005b3480156105c057600080fd5b506105f5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e58565b604051808215151515815260200191505060405180910390f35b34801561061b57600080fd5b50610624610e75565b604051808215151515815260200191505060405180910390f35b34801561064a57600080fd5b50610653610e89565b6040518082815260200191505060405180910390f35b34801561067557600080fd5b5061067e610e8f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106cc57600080fd5b506106d5610eb9565b604051808215151515815260200191505060405180910390f35b3480156106fb57600080fd5b50610704610f11565b005b34801561071257600080fd5b5061071b610f1c565b6040518082815260200191505060405180910390f35b34801561073d57600080fd5b50610746610f22565b604051808215151515815260200191505060405180910390f35b34801561076c57600080fd5b50610775610f39565b6040518082815260200191505060405180910390f35b34801561079757600080fd5b506107cc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f43565b6040518082815260200191505060405180910390f35b3480156107ee57600080fd5b50610823600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f8c565b005b34801561083157600080fd5b5061083a61108b565b6040518082600181111561084a57fe5b60ff16815260200191505060405180910390f35b34801561086a57600080fd5b5061087361109e565b005b34801561088157600080fd5b506108b6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110a9565b005b6108ec600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109de565b005b3480156108fa57600080fd5b506109036110c9565b6040518082815260200191505060405180910390f35b34801561092557600080fd5b5061095a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110cf565b005b34801561096857600080fd5b506109716110ee565b6040518082815260200191505060405180910390f35b34801561099357600080fd5b5061099c6110f4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600080600060016002600082825401925050819055506002549050349250610a06848461111e565b610a108484611140565b610a1983611292565b9150610a30836006546112b090919063ffffffff16565b600681905550610a4084836112d1565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8585604051808381526020018281526020019250505060405180910390a3610ab784846112df565b610abf6112e3565b610ac98484611398565b60025481141515610ad957600080fd5b50505050565b610ae833610e58565b1515610af357600080fd5b610afc8161139c565b50565b6000600d544211905090565b610b1433610e58565b1515610b1f57600080fd5b610b28816113f6565b50565b610b33610eb9565b1515610b3e57600080fd5b8060006001811115610b4c57fe5b1415610b7b576000601560006101000a81548160ff02191690836001811115610b7157fe5b0217905550610bb4565b80600180811115610b8857fe5b1415610bb3576001601560006101000a81548160ff02191690836001811115610bad57fe5b02179055505b5b60006001811115610bc157fe5b601560009054906101000a900460ff166001811115610bdc57fe5b1415610bf257610bed6101f4610c38565b610c2b565b600180811115610bfe57fe5b601560009054906101000a900460ff166001811115610c1957fe5b1415610c2a57610c2960fa610c38565b5b5b50565b6000600554905090565b8060058190555050565b6000600a54905090565b6000610c6282600161145090919063ffffffff16565b9050919050565b6000600f54905090565b6000600654905090565b60096020528060005260406000206000915090505481565b60115481565b6000600c544210158015610cb15750600d544211155b905090565b6000600d54905090565b600e60009054906101000a900460ff16151515610cdc57600080fd5b610ce4610aff565b1515610cef57600080fd5b6001600e60006101000a81548160ff021916908315150217905550610d126114e4565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b6000600a54610d4d610c73565b1015905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60125481565b610d8c610eb9565b1515610d9757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610e6e82600061145090919063ffffffff16565b9050919050565b6000600f54610e82610c73565b1015905090565b60135481565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610f1a336116db565b565b60075481565b6000600e60009054906101000a900460ff16905090565b6000600c54905090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610f94610f22565b1515610f9f57600080fd5b610fa7610e75565b151515610fb357600080fd5b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561107057600080fd5b505af1158015611084573d6000803e3d6000fd5b5050505050565b601560009054906101000a900460ff1681565b6110a7336113f6565b565b6110b233610e58565b15156110bd57600080fd5b6110c681611735565b50565b60085481565b6110d7610eb9565b15156110e257600080fd5b6110eb8161178f565b50565b60145481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61112782610c4c565b151561113257600080fd5b61113c828261188b565b5050565b600080600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915061119883836112b090919063ffffffff16565b905060075481101580156111ae57506008548111155b1515611248576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001807f74686973207472616e73656374696f6e206f6b206e6f7720206265636175736581526020017f20697420697320696e206265747765656e2072616e676500000000000000000081525060400191505060405180910390fd5b80600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b60006112a9600554836118ac90919063ffffffff16565b9050919050565b60008082840190508381101515156112c757600080fd5b8091505092915050565b6112db82826118ea565b5050565b5050565b60008060018111156112f157fe5b601560009054906101000a900460ff16600181111561130c57fe5b141561135e578073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015611358573d6000803e3d6000fd5b50611395565b60018081111561136a57fe5b601560009054906101000a900460ff16600181111561138557fe5b1415611394576113936119de565b5b5b50565b5050565b6113b0816001611ab690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b61140a816001611b6690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561148d57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6114ec610e75565b1561163257601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561157757600080fd5b505af115801561158b573d6000803e3d6000fd5b50505050601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561161557600080fd5b505af1158015611629573d6000803e3d6000fd5b505050506116d1565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156116b857600080fd5b505af11580156116cc573d6000803e3d6000fd5b505050505b6116d9611c15565b565b6116ef816000611b6690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f8514ebf39bc709d98437cc704235ba0864bfdae7563b87a6583d2920cf2e835460405160405180910390a250565b611749816000611ab690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f25f05eb2b87548a4d5f3b374af0482149441d4fe9264ff9be277dc1d37a3bf1a60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156117cb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611893610c9b565b151561189e57600080fd5b6118a88282611c17565b5050565b60008060008414156118c157600091506118e3565b82840290508284828115156118d257fe5b041415156118df57600080fd5b8091505b5092915050565b6118f26110f4565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561199457600080fd5b505af11580156119a8573d6000803e3d6000fd5b505050506040513d60208110156119be57600080fd5b810190808051906020019092919050505015156119da57600080fd5b5050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015611a9b57600080fd5b505af1158015611aaf573d6000803e3d6000fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611af257600080fd5b611afc8282611450565b151515611b0857600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611ba257600080fd5b611bac8282611450565b1515611bb757600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b565b611c218282611c4f565b600a54611c3e82611c30610c73565b6112b090919063ffffffff16565b11151515611c4b57600080fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611c8b57600080fd5b60008114151515611c9b57600080fd5b50505600a165627a7a72305820e3e3b199898626e5dfa91b47e4f9f2de763eefe237442959d9a19f0e7904533b0029608060405234801561001057600080fd5b50604051602080610d2083398101806040528101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561013357600080fd5b80600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600260006101000a81548160ff0219169083600281111561019357fe5b021790555050610b78806101a86000396000f3006080604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680632348238c146100b457806338af3eed146100f757806343d726d61461014e57806351cff8d914610165578063685ca194146101a85780638c52dc41146102035780639af6549a1461021a578063c19d93fb14610231578063c6dbdf611461026a578063e3a9db1a146102c1578063f340fa0114610318575b600080fd5b3480156100c057600080fd5b506100f5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061034e565b005b34801561010357600080fd5b5061010c6104ac565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561015a57600080fd5b506101636104d6565b005b34801561017157600080fd5b506101a6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105b6565b005b3480156101b457600080fd5b506101e9600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105d6565b604051808215151515815260200191505060405180910390f35b34801561020f57600080fd5b50610218610608565b005b34801561022657600080fd5b5061022f6106e9565b005b34801561023d57600080fd5b5061024661079e565b6040518082600281111561025657fe5b60ff16815260200191505060405180910390f35b34801561027657600080fd5b5061027f6107b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102cd57600080fd5b50610302600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107de565b6040518082815260200191505060405180910390f35b61034c600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610827565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103a957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156103e557600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d96000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b6000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561053157600080fd5b6000600281111561053e57fe5b600260009054906101000a900460ff16600281111561055957fe5b14151561056557600080fd5b60028060006101000a81548160ff0219169083600281111561058357fe5b02179055507f088672c3a6e342f7cd94a65ba63b79df24a8973927b4d05d803c44bbf787d12f60405160405180910390a1565b6105bf816105d6565b15156105ca57600080fd5b6105d381610867565b50565b6000600160028111156105e557fe5b600260009054906101000a900460ff16600281111561060057fe5b149050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561066357600080fd5b6000600281111561067057fe5b600260009054906101000a900460ff16600281111561068b57fe5b14151561069757600080fd5b6001600260006101000a81548160ff021916908360028111156106b657fe5b02179055507f599d8e5a83cffb867d051598c4d70e805d59802d8081c1c7d6dffc5b6aca2b8960405160405180910390a1565b6002808111156106f557fe5b600260009054906101000a900460ff16600281111561071057fe5b14151561071c57600080fd5b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f1935050505015801561079b573d6000803e3d6000fd5b50565b6000600260009054906101000a900460ff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600281111561083457fe5b600260009054906101000a900460ff16600281111561084f57fe5b14151561085b57600080fd5b610864816109e4565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108c457600080fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610991573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5826040518082815260200191505060405180910390a25050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a4157600080fd5b349050610a9681600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b2b90919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4826040518082815260200191505060405180910390a25050565b6000808284019050838110151515610b4257600080fd5b80915050929150505600a165627a7a72305820df26115e3452f76019f3c5687bb55227afbf29b24e00180d94f8300a44b8c2cd0029",
  "deployedBytecode": "0x6080604052600436106101d8576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806310154bad146101e35780631515bc2b14610226578063291d9549146102555780632a86e726146102985780632c4e722e146102c557806334fcf437146102f0578063355274ea1461031d5780633af32abf1461034857806340193883146103a35780634042b66f146103ce57806342e94c90146103f957806346daa2421461045057806347535d7b1461047b5780634b6753bc146104aa5780634bb278f3146104d55780634f935945146104ec578063521eb2731461051b57806353c08ea214610572578063715018a61461059d5780637d0c269f146105b45780637d3d65221461060f578063864329e31461063e5780638da5cb5b146106695780638f32d59b146106c05780639ad3a7ba146106ef578063b25d7f5414610706578063b3f05b9714610731578063b7a8807c14610760578063bb8b2b471461078b578063bffa55d5146107e2578063c040e6b814610825578063d6cd94731461085e578063eaf9144a14610875578063ec8ac4d8146108b8578063ed5db874146108ee578063f2fde38b14610919578063f45b9bed1461095c578063fc0c546a14610987575b6101e1336109de565b005b3480156101ef57600080fd5b50610224600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610adf565b005b34801561023257600080fd5b5061023b610aff565b604051808215151515815260200191505060405180910390f35b34801561026157600080fd5b50610296600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b0b565b005b3480156102a457600080fd5b506102c360048036038101908080359060200190929190505050610b2b565b005b3480156102d157600080fd5b506102da610c2e565b6040518082815260200191505060405180910390f35b3480156102fc57600080fd5b5061031b60048036038101908080359060200190929190505050610c38565b005b34801561032957600080fd5b50610332610c42565b6040518082815260200191505060405180910390f35b34801561035457600080fd5b50610389600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c4c565b604051808215151515815260200191505060405180910390f35b3480156103af57600080fd5b506103b8610c69565b6040518082815260200191505060405180910390f35b3480156103da57600080fd5b506103e3610c73565b6040518082815260200191505060405180910390f35b34801561040557600080fd5b5061043a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c7d565b6040518082815260200191505060405180910390f35b34801561045c57600080fd5b50610465610c95565b6040518082815260200191505060405180910390f35b34801561048757600080fd5b50610490610c9b565b604051808215151515815260200191505060405180910390f35b3480156104b657600080fd5b506104bf610cb6565b6040518082815260200191505060405180910390f35b3480156104e157600080fd5b506104ea610cc0565b005b3480156104f857600080fd5b50610501610d40565b604051808215151515815260200191505060405180910390f35b34801561052757600080fd5b50610530610d54565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561057e57600080fd5b50610587610d7e565b6040518082815260200191505060405180910390f35b3480156105a957600080fd5b506105b2610d84565b005b3480156105c057600080fd5b506105f5600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e58565b604051808215151515815260200191505060405180910390f35b34801561061b57600080fd5b50610624610e75565b604051808215151515815260200191505060405180910390f35b34801561064a57600080fd5b50610653610e89565b6040518082815260200191505060405180910390f35b34801561067557600080fd5b5061067e610e8f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106cc57600080fd5b506106d5610eb9565b604051808215151515815260200191505060405180910390f35b3480156106fb57600080fd5b50610704610f11565b005b34801561071257600080fd5b5061071b610f1c565b6040518082815260200191505060405180910390f35b34801561073d57600080fd5b50610746610f22565b604051808215151515815260200191505060405180910390f35b34801561076c57600080fd5b50610775610f39565b6040518082815260200191505060405180910390f35b34801561079757600080fd5b506107cc600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f43565b6040518082815260200191505060405180910390f35b3480156107ee57600080fd5b50610823600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f8c565b005b34801561083157600080fd5b5061083a61108b565b6040518082600181111561084a57fe5b60ff16815260200191505060405180910390f35b34801561086a57600080fd5b5061087361109e565b005b34801561088157600080fd5b506108b6600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110a9565b005b6108ec600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109de565b005b3480156108fa57600080fd5b506109036110c9565b6040518082815260200191505060405180910390f35b34801561092557600080fd5b5061095a600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110cf565b005b34801561096857600080fd5b506109716110ee565b6040518082815260200191505060405180910390f35b34801561099357600080fd5b5061099c6110f4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600080600060016002600082825401925050819055506002549050349250610a06848461111e565b610a108484611140565b610a1983611292565b9150610a30836006546112b090919063ffffffff16565b600681905550610a4084836112d1565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b8585604051808381526020018281526020019250505060405180910390a3610ab784846112df565b610abf6112e3565b610ac98484611398565b60025481141515610ad957600080fd5b50505050565b610ae833610e58565b1515610af357600080fd5b610afc8161139c565b50565b6000600d544211905090565b610b1433610e58565b1515610b1f57600080fd5b610b28816113f6565b50565b610b33610eb9565b1515610b3e57600080fd5b8060006001811115610b4c57fe5b1415610b7b576000601560006101000a81548160ff02191690836001811115610b7157fe5b0217905550610bb4565b80600180811115610b8857fe5b1415610bb3576001601560006101000a81548160ff02191690836001811115610bad57fe5b02179055505b5b60006001811115610bc157fe5b601560009054906101000a900460ff166001811115610bdc57fe5b1415610bf257610bed6101f4610c38565b610c2b565b600180811115610bfe57fe5b601560009054906101000a900460ff166001811115610c1957fe5b1415610c2a57610c2960fa610c38565b5b5b50565b6000600554905090565b8060058190555050565b6000600a54905090565b6000610c6282600161145090919063ffffffff16565b9050919050565b6000600f54905090565b6000600654905090565b60096020528060005260406000206000915090505481565b60115481565b6000600c544210158015610cb15750600d544211155b905090565b6000600d54905090565b600e60009054906101000a900460ff16151515610cdc57600080fd5b610ce4610aff565b1515610cef57600080fd5b6001600e60006101000a81548160ff021916908315150217905550610d126114e4565b7f9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf73183660405160405180910390a1565b6000600a54610d4d610c73565b1015905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60125481565b610d8c610eb9565b1515610d9757600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610e6e82600061145090919063ffffffff16565b9050919050565b6000600f54610e82610c73565b1015905090565b60135481565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b610f1a336116db565b565b60075481565b6000600e60009054906101000a900460ff16905090565b6000600c54905090565b6000600960008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610f94610f22565b1515610f9f57600080fd5b610fa7610e75565b151515610fb357600080fd5b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166351cff8d9826040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561107057600080fd5b505af1158015611084573d6000803e3d6000fd5b5050505050565b601560009054906101000a900460ff1681565b6110a7336113f6565b565b6110b233610e58565b15156110bd57600080fd5b6110c681611735565b50565b60085481565b6110d7610eb9565b15156110e257600080fd5b6110eb8161178f565b50565b60145481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61112782610c4c565b151561113257600080fd5b61113c828261188b565b5050565b600080600960008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054915061119883836112b090919063ffffffff16565b905060075481101580156111ae57506008548111155b1515611248576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260378152602001807f74686973207472616e73656374696f6e206f6b206e6f7720206265636175736581526020017f20697420697320696e206265747765656e2072616e676500000000000000000081525060400191505060405180910390fd5b80600960008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b60006112a9600554836118ac90919063ffffffff16565b9050919050565b60008082840190508381101515156112c757600080fd5b8091505092915050565b6112db82826118ea565b5050565b5050565b60008060018111156112f157fe5b601560009054906101000a900460ff16600181111561130c57fe5b141561135e578073ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015611358573d6000803e3d6000fd5b50611395565b60018081111561136a57fe5b601560009054906101000a900460ff16600181111561138557fe5b1415611394576113936119de565b5b5b50565b5050565b6113b0816001611ab690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f60405160405180910390a250565b61140a816001611b6690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b660405160405180910390a250565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561148d57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6114ec610e75565b1561163257601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561157757600080fd5b505af115801561158b573d6000803e3d6000fd5b50505050601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639af6549a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b15801561161557600080fd5b505af1158015611629573d6000803e3d6000fd5b505050506116d1565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1580156116b857600080fd5b505af11580156116cc573d6000803e3d6000fd5b505050505b6116d9611c15565b565b6116ef816000611b6690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f8514ebf39bc709d98437cc704235ba0864bfdae7563b87a6583d2920cf2e835460405160405180910390a250565b611749816000611ab690919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f25f05eb2b87548a4d5f3b374af0482149441d4fe9264ff9be277dc1d37a3bf1a60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156117cb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b611893610c9b565b151561189e57600080fd5b6118a88282611c17565b5050565b60008060008414156118c157600091506118e3565b82840290508284828115156118d257fe5b041415156118df57600080fd5b8091505b5092915050565b6118f26110f4565b73ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561199457600080fd5b505af11580156119a8573d6000803e3d6000fd5b505050506040513d60208110156119be57600080fd5b810190808051906020019092919050505015156119da57600080fd5b5050565b601060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b158015611a9b57600080fd5b505af1158015611aaf573d6000803e3d6000fd5b5050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611af257600080fd5b611afc8282611450565b151515611b0857600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614151515611ba257600080fd5b611bac8282611450565b1515611bb757600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b565b611c218282611c4f565b600a54611c3e82611c30610c73565b6112b090919063ffffffff16565b11151515611c4b57600080fd5b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515611c8b57600080fd5b60008114151515611c9b57600080fd5b50505600a165627a7a72305820e3e3b199898626e5dfa91b47e4f9f2de763eefe237442959d9a19f0e7904533b0029",
  "sourceMap": "946:2052:5:-;;;1576:16:11;1544:48;;1644:20;1611:53;;1211:2:5;1172:41;;1256:2;1217:41;;1301:2;1262:41;;1346:2;1307:41;;1427:21;1397:51;;;;;;;;;;;;;;;;;;;;;;;;;;1491:362;8:9:-1;5:2;;;30:1;27;20:12;5:2;1491:362:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1758:5;1706:11;1720;1681:4;1641:5;1647:7;1655:6;416:27:10;432:10;416:15;;;:27;;;:::i;:::-;577:1:31;561:13;:17;;;;2619:1:11;2612:4;:8;2604:17;;;;;;;;2657:1;2639:20;;:6;:20;;;;2631:29;;;;;;;;2695:1;2678:19;;:5;:19;;;;2670:28;;;;;;;;2717:4;2709:5;:12;;;;2741:6;2731:7;;:16;;;;;;;;;;;;;;;;;;2766:5;2757:6;;:14;;;;;;;;;;;;;;;;;;2530:248;;;489:1:15;483:3;:7;475:16;;;;;;;;508:3;501:4;:10;;;;432:86;525:10:20;516:6;;:19;;;;;;;;;;;;;;;;;;583:6;;;;;;;;;;;550:40;;579:1;550:40;;;;;;;;;;;;815:15:16;800:11;:30;;792:39;;;;;;;;863:11;849;:25;841:34;;;;;;;;901:11;886:12;:26;;;;937:11;922:12;:26;;;;658:297;;455:5:12;442:10;;:18;;;;;;;;;;;;;;;;;;1214:1:13;1207:4;:8;1199:17;;;;;;;;1253:8;:6;;;:8;;;:::i;:::-;1236:26;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1236:26:13;1226:7;;:36;;;;;;;;;;;;;;;;;;1280:4;1272:5;:12;;;;1155:136;1802:4:5;1794:5;:12;1786:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1491:362;;;;;;;946:2052;;876:134:10;937:26;955:7;937:13;:17;;;;;;:26;;;;;:::i;:::-;995:7;978:25;;;;;;;;;;;;876:134;:::o;3479:79:11:-;3518:7;3544;;;;;;;;;;;3537:14;;3479:79;:::o;260:181:6:-;355:1;336:21;;:7;:21;;;;328:30;;;;;;;;377:18;381:4;387:7;377:3;;;:18;;;:::i;:::-;376:19;368:28;;;;;;;;430:4;407;:11;;:20;419:7;407:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:181;;:::o;787:162::-;859:4;902:1;883:21;;:7;:21;;;;875:30;;;;;;;;922:4;:11;;:20;934:7;922:20;;;;;;;;;;;;;;;;;;;;;;;;;915:27;;787:162;;;;:::o;946:2052:5:-;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "946:2052:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3240:21:11;3250:10;3240:9;:21::i;:::-;946:2052:5;837:105:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;837:105:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1709:164:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1709:164:16;;;;;;;;;;;;;;;;;;;;;;;;;;;948:111:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;948:111:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;1900:358:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1900:358:5;;;;;;;;;;;;;;;;;;;;;;;;;;3643:75:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3643:75:11;;;;;;;;;;;;;;;;;;;;;;;8589:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8589:70:11;;;;;;;;;;;;;;;;;;;;;;;;;;581:73:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;581:73:15;;;;;;;;;;;;;;;;;;;;;;;714:117:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;714:117:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1373:75:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1373:75:13;;;;;;;;;;;;;;;;;;;;;;;3781:85:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3781:85:11;;;;;;;;;;;;;;;;;;;;;;;1678:48;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1678:48:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1172:41:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1172:41:5;;;;;;;;;;;;;;;;;;;;;;;1348:197:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1348:197:16;;;;;;;;;;;;;;;;;;;;;;;;;;;1174:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1174:89:16;;;;;;;;;;;;;;;;;;;;;;;797:183:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;797:183:12;;;;;;772:92:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;772:92:15;;;;;;;;;;;;;;;;;;;;;;;;;;;3479:79:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3479:79:11;;;;;;;;;;;;;;;;;;;;;;;;;;;1217:41:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1217:41:5;;;;;;;;;;;;;;;;;;;;;;;1348:137:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1348:137:20;;;;;;551:117:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;551:117:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1873:94:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1873:94:13;;;;;;;;;;;;;;;;;;;;;;;;;;;1262:41:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1262:41:5;;;;;;;;;;;;;;;;;;;;;;;660:77:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;660:77:20;;;;;;;;;;;;;;;;;;;;;;;;;;;980:90;;8:9:-1;5:2;;;30:1;27;20:12;5:2;980:90:20;;;;;;;;;;;;;;;;;;;;;;;;;;;785:85:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;785:85:10;;;;;;1544:48:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1544:48:11;;;;;;;;;;;;;;;;;;;;;;;557:82:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;557:82:12;;;;;;;;;;;;;;;;;;;;;;;;;;;1020:89:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1020:89:16;;;;;;;;;;;;;;;;;;;;;;;7833:128:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7833:128:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1597:153:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1597:153:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:51:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1397:51:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1065:85:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1065:85:9;;;;;;674:105:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;674:105:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;4124:658:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;1611:53;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1611:53:11;;;;;;;;;;;;;;;;;;;;;;;1656:107:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1656:107:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;1307:41:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1307:41:5;;;;;;;;;;;;;;;;;;;;;;;3327:76:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3327:76:11;;;;;;;;;;;;;;;;;;;;;;;;;;;4124:658;4202:17;4399:14;1022:20:31;1011:1;994:13;;:18;;;;;;;;;;;1045:13;;1022:36;;4222:9:11;4202:29;;4241:44;4262:11;4275:9;4241:20;:44::i;:::-;4295:45;4317:11;4330:9;4295:21;:45::i;:::-;4416:26;4432:9;4416:15;:26::i;:::-;4399:43;;4490:25;4505:9;4490:10;;:14;;:25;;;;:::i;:::-;4477:10;:38;;;;4526:37;4543:11;4556:6;4526:16;:37::i;:::-;4606:11;4578:59;;4594:10;4578:59;;;4619:9;4630:6;4578:59;;;;;;;;;;;;;;;;;;;;;;;;4648:46;4671:11;4684:9;4648:22;:46::i;:::-;4705:15;:13;:15::i;:::-;4730:45;4752:11;4765:9;4730:21;:45::i;:::-;1103:13:31;;1087:12;:29;1079:38;;;;;;;;4124:658:11;;;;:::o;837:105:9:-;501:25:10;515:10;501:13;:25::i;:::-;493:34;;;;;;;;911:24:9;927:7;911:15;:24::i;:::-;837:105;:::o;1709:164:16:-;1751:4;1854:12;;1836:15;:30;1829:37;;1709:164;:::o;948:111:9:-;501:25:10;515:10;501:13;:25::i;:::-;493:34;;;;;;;;1025:27:9;1044:7;1025:18;:27::i;:::-;948:111;:::o;1900:358:5:-;864:9:20;:7;:9::i;:::-;856:18;;;;;;;;1996:6:5;1971:21;1966:27;;;;;;;;:36;1962:157;;;2016:21;2008:5;;:29;;;;;;;;;;;;;;;;;;;;;;;;1962:157;;;2076:6;2054:18;2049:24;;;;;;;;:33;2046:73;;;2098:18;2090:5;;:26;;;;;;;;;;;;;;;;;;;;;;;;2046:73;1962:157;2134:21;2125:30;;;;;;;;:5;;;;;;;;;;;:30;;;;;;;;;2122:133;;;2165:18;2179:3;2165:13;:18::i;:::-;2122:133;;;2204:18;2195:27;;;;;;;;:5;;;;;;;;;;;:27;;;;;;;;;2192:63;;;2229:19;2244:3;2229:13;:19::i;:::-;2192:63;2122:133;1900:358;:::o;3643:75:11:-;3680:7;3706:5;;3699:12;;3643:75;:::o;8589:70::-;8643:4;8635:5;:12;;;;8589:70;:::o;581:73:15:-;617:7;643:4;;636:11;;581:73;:::o;714:117:9:-;775:4;798:26;816:7;798:13;:17;;:26;;;;:::i;:::-;791:33;;714:117;;;:::o;1373:75:13:-;1410:7;1436:5;;1429:12;;1373:75;:::o;3781:85:11:-;3823:7;3849:10;;3842:17;;3781:85;:::o;1678:48::-;;;;;;;;;;;;;;;;;:::o;1172:41:5:-;;;;:::o;1348:197:16:-;1387:4;1491:12;;1472:15;:31;;:66;;;;;1526:12;;1507:15;:31;;1472:66;1465:73;;1348:197;:::o;1174:89::-;1218:7;1244:12;;1237:19;;1174:89;:::o;797:183:12:-;843:10;;;;;;;;;;;842:11;834:20;;;;;;;;872:11;:9;:11::i;:::-;864:20;;;;;;;;908:4;895:10;;:17;;;;;;;;;;;;;;;;;;923:15;:13;:15::i;:::-;953:20;;;;;;;;;;797:183::o;772:92:15:-;815:4;853;;838:11;:9;:11::i;:::-;:19;;831:26;;772:92;:::o;3479:79:11:-;3518:7;3544;;;;;;;;;;;3537:14;;3479:79;:::o;1217:41:5:-;;;;:::o;1348:137:20:-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1446:1;1409:40;;1430:6;;;;;;;;;;;1409:40;;;;;;;;;;;;1476:1;1459:6;;:19;;;;;;;;;;;;;;;;;;1348:137::o;551:117:10:-;612:4;635:26;653:7;635:13;:17;;:26;;;;:::i;:::-;628:33;;551:117;;;:::o;1873:94:13:-;1917:4;1955:5;;1940:11;:9;:11::i;:::-;:20;;1933:27;;1873:94;:::o;1262:41:5:-;;;;:::o;660:77:20:-;698:7;724:6;;;;;;;;;;;717:13;;660:77;:::o;980:90::-;1020:4;1057:6;;;;;;;;;;;1043:20;;:10;:20;;;1036:27;;980:90;:::o;785:85:10:-;833:30;852:10;833:18;:30::i;:::-;785:85::o;1544:48:11:-;;;;:::o;557:82:12:-;599:4;622:10;;;;;;;;;;;615:17;;557:82;:::o;1020:89:16:-;1064:7;1090:12;;1083:19;;1020:89;:::o;7833:128:11:-;7905:7;7929:13;:27;7943:12;7929:27;;;;;;;;;;;;;;;;7922:34;;7833:128;;;:::o;1597:153:13:-;1661:11;:9;:11::i;:::-;1653:20;;;;;;;;1692:13;:11;:13::i;:::-;1691:14;1683:23;;;;;;;;1717:7;;;;;;;;;;;:16;;;1734:8;1717:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1717:26:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1717:26:13;;;;1597:153;:::o;1397:51:5:-;;;;;;;;;;;;;:::o;1065:85:9:-;1113:30;1132:10;1113:18;:30::i;:::-;1065:85::o;674:105:10:-;501:25;515:10;501:13;:25::i;:::-;493:34;;;;;;;;748:24;764:7;748:15;:24::i;:::-;674:105;:::o;1611:53:11:-;;;;:::o;1656:107:20:-;864:9;:7;:9::i;:::-;856:18;;;;;;;;1728:28;1747:8;1728:18;:28::i;:::-;1656:107;:::o;1307:41:5:-;;;;:::o;3327:76:11:-;3365:6;3390;;;;;;;;;;;3383:13;;3327:76;:::o;536:201:17:-;640:27;654:12;640:13;:27::i;:::-;632:36;;;;;;;;678:52;705:12;719:10;678:26;:52::i;:::-;536:201;;:::o;8018:499:11:-;8185:29;8250:24;8217:13;:27;8231:12;8217:27;;;;;;;;;;;;;;;;8185:59;;8277:37;8303:10;8277:21;:25;;:37;;;;:::i;:::-;8250:64;;8348:14;;8328:16;:34;;:73;;;;;8386:15;;8366:16;:35;;8328:73;8320:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8496:16;8466:13;:27;8480:12;8466:27;;;;;;;;;;;;;;;:46;;;;8018:499;;;;:::o;7464:120::-;7531:7;7557:20;7571:5;;7557:9;:13;;:20;;;;:::i;:::-;7550:27;;7464:120;;;:::o;2762:145:19:-;2820:7;2839:9;2855:1;2851;:5;2839:17;;2879:1;2874;:6;;2866:15;;;;;;;;2899:1;2892:8;;2762:145;;;;;:::o;6701:134:11:-;6788:40;6803:11;6816;6788:14;:40::i;:::-;6701:134;;:::o;7098:117::-;;;:::o;2378:214:5:-;2459:15;2430:21;2421:30;;;;;;;;:5;;;;;;;;;;;:30;;;;;;;;;2418:170;;;2480:6;:15;;:26;2496:9;2480:26;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2480:26:5;2418:170;;;2532:18;2523:27;;;;;;;;:5;;;;;;;;;;;:27;;;;;;;;;2519:69;;;2560:21;:19;:21::i;:::-;2519:69;2418:170;2378:214;:::o;5911:121:11:-;;;:::o;1156:134:9:-;1217:26;1235:7;1217:13;:17;;:26;;;;:::i;:::-;1275:7;1258:25;;;;;;;;;;;;1156:134;:::o;1296:142::-;1360:29;1381:7;1360:13;:20;;:29;;;;:::i;:::-;1423:7;1404:27;;;;;;;;;;;;1296:142;:::o;787:162:6:-;859:4;902:1;883:21;;:7;:21;;;;875:30;;;;;;;;922:4;:11;;:20;934:7;922:20;;;;;;;;;;;;;;;;;;;;;;;;;915:27;;787:162;;;;:::o;2060:238:13:-;2108:13;:11;:13::i;:::-;2104:156;;;2137:7;;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2137:15:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2137:15:13;;;;2166:7;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2166:29:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2166:29:13;;;;2104:156;;;2226:7;;;;;;;;;;;:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2226:23:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2226:23:13;;;;2104:156;2270:21;:19;:21::i;:::-;2060:238::o;1016:142:10:-;1080:29;1101:7;1080:13;:20;;:29;;;;:::i;:::-;1143:7;1124:27;;;;;;;;;;;;1016:142;:::o;876:134::-;937:26;955:7;937:13;:17;;:26;;;;:::i;:::-;995:7;978:25;;;;;;;;;;;;876:134;:::o;1907:183:20:-;2000:1;1980:22;;:8;:22;;;;1972:31;;;;;;;;2047:8;2018:38;;2039:6;;;;;;;;;;;2018:38;;;;;;;;;;;;2075:8;2066:6;;:17;;;;;;;;;;;;;;;;;;1907:183;:::o;2065:165:16:-;443:8;:6;:8::i;:::-;435:17;;;;;;;;2173:50;2200:11;2213:9;2173:26;:50::i;:::-;2065:165;;:::o;272:421:19:-;330:7;621:9;575:1;570;:6;566:45;;;599:1;592:8;;;;566:45;637:1;633;:5;621:17;;665:1;660;656;:5;;;;;;;;:10;648:19;;;;;;;;685:1;678:8;;272:421;;;;;;:::o;511:236:14:-;699:7;:5;:7::i;:::-;677:36;;;714:11;727;677:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;677:62:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;677:62:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;677:62:14;;;;;;;;;;;;;;;;669:71;;;;;;;;511:236;;:::o;2394:95:13:-;2438:7;;;;;;;;;;;:15;;;2460:9;2471:10;2438:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2438:44:13;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2438:44:13;;;;;2394:95::o;260:181:6:-;355:1;336:21;;:7;:21;;;;328:30;;;;;;;;377:18;381:4;387:7;377:3;:18::i;:::-;376:19;368:28;;;;;;;;430:4;407;:11;;:20;419:7;407:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;260:181;;:::o;515:184::-;613:1;594:21;;:7;:21;;;;586:30;;;;;;;;634:18;638:4;644:7;634:3;:18::i;:::-;626:27;;;;;;;;687:5;664:4;:11;;:20;676:7;664:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;515:184;;:::o;1189:36:12:-;:::o;1060:204:15:-;1154:50;1181:11;1194:9;1154:26;:50::i;:::-;1252:4;;1222:26;1238:9;1222:11;:9;:11::i;:::-;:15;;:26;;;;:::i;:::-;:34;;1214:43;;;;;;;;1060:204;;:::o;5455:168:11:-;5580:1;5557:25;;:11;:25;;;;5549:34;;;;;;;;5614:1;5601:9;:14;;5593:23;;;;;;;;5455:168;;:::o",
  "source": "pragma solidity ^0.4.24;\n\nimport \"../node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\";\nimport \"../node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Pausable.sol\";\nimport \"../node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\";\nimport \"../node_modules/openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol\";\nimport \"../node_modules/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol\";\nimport \"../node_modules/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol\";\nimport \"../node_modules/openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol\";\nimport \"../node_modules/openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol\";\nimport \"../node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol\";\nimport \"../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\ncontract trabicCrowdSale is Crowdsale,MintedCrowdsale ,CappedCrowdsale , Ownable ,TimedCrowdsale , WhitelistCrowdsale , RefundableCrowdsale {\n   \n\n  // ICO Stages\n enum CrowdsaleStage { PreICO, ICO}\n\n  // Token Distribution\n  uint256 public tokenSalePercentage   = 70;\n  uint256 public foundersPercentage    = 10;\n  uint256 public foundationPercentage  = 10;\n  uint256 public partnersPercentage    = 10;\n// const  rate;\n  // Default to PreICO stage\n  CrowdsaleStage public stage = CrowdsaleStage.PreICO;\n\n\n// Constructor of CrowdSale Contract\n  function trabicCrowdSale(uint256 _rate, address  _wallet,ERC20 _token,uint _cap,uint256 openingTime, uint256 closingTime, uint256 _goal)\n\n  Crowdsale(_rate,_wallet,_token)\n  CappedCrowdsale(_cap)\n    TimedCrowdsale(openingTime , closingTime)\n     RefundableCrowdsale(_goal) \n      public {\n\n    require(_goal < _cap, \"CrowdFunding reached Hard Cap\");\n         \n}\n\n\n// Set CrowdSaleStages  only Admin can set\n\nfunction setCrowdSaleStage(uint256 _stage) public onlyOwner{\n\nif( uint(CrowdsaleStage.PreICO)== _stage ){\n  stage = CrowdsaleStage.PreICO;\n}\nelse if(uint(CrowdsaleStage.ICO)== _stage){\n  \n  stage = CrowdsaleStage.ICO;\n}\n\n\nif(stage == CrowdsaleStage.PreICO){\n   \n   super.setRate(500);\n}\nelse if(stage == CrowdsaleStage.ICO){\n    super.setRate( 250);\n   \n}\n\n}\n\n\n  /**\n   * @dev forwards funds to the wallet during the PreICO stage, then the refund vault during ICO stage\n   */\n  function _forwardFunds() internal {\n    if(stage == CrowdsaleStage.PreICO) {\n    address  wallet;\n    wallet.transfer(msg.value);\n    } else if (stage == CrowdsaleStage.ICO) {\n      super._forwardFunds();\n    }\n  }\n\n\n\n\n  /**\n   * @dev enables token transfers, called when owner calls finalize()\n  */\n  // function finalization() internal {\n  //   if(goalReached()) {\n  //     ERC20Mintable _mintableToken =  ERC20Mintable(token);\n  //     // Do more stuff....\n  //     _mintableToken.finishMinting();\n  //     // Unpause the token\n  //     ERC20Pausable(token).unpause();\n  //   }\n\n  //   super.finalization();\n  // }\n\n}\n",
  "sourcePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/contracts/TrabicCrowdSale.sol",
  "ast": {
    "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/contracts/TrabicCrowdSale.sol",
    "exportedSymbols": {
      "trabicCrowdSale": [
        581
      ]
    },
    "id": 582,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 408,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 409,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 3122,
        "src": "26:79:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Pausable.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Pausable.sol",
        "id": 410,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 3310,
        "src": "106:87:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 411,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 3208,
        "src": "194:87:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 412,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 1434,
        "src": "282:81:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 413,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 1646,
        "src": "364:96:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 414,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 1718,
        "src": "461:98:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 415,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 1830,
        "src": "560:97:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "id": 416,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 1860,
        "src": "658:101:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 417,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 1618,
        "src": "760:104:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 418,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 2345,
        "src": "865:79:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 419,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1433,
              "src": "974:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$1433",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 420,
            "nodeType": "InheritanceSpecifier",
            "src": "974:9:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 421,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1645,
              "src": "984:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$1645",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 422,
            "nodeType": "InheritanceSpecifier",
            "src": "984:15:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 423,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1717,
              "src": "1001:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$1717",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 424,
            "nodeType": "InheritanceSpecifier",
            "src": "1001:15:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 425,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2344,
              "src": "1019:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2344",
                "typeString": "contract Ownable"
              }
            },
            "id": 426,
            "nodeType": "InheritanceSpecifier",
            "src": "1019:7:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 427,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1829,
              "src": "1028:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1829",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 428,
            "nodeType": "InheritanceSpecifier",
            "src": "1028:14:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 429,
              "name": "WhitelistCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1859,
              "src": "1045:18:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistCrowdsale_$1859",
                "typeString": "contract WhitelistCrowdsale"
              }
            },
            "id": 430,
            "nodeType": "InheritanceSpecifier",
            "src": "1045:18:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 431,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1617,
              "src": "1066:19:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$1617",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 432,
            "nodeType": "InheritanceSpecifier",
            "src": "1066:19:5"
          }
        ],
        "contractDependencies": [
          990,
          1093,
          1433,
          1491,
          1617,
          1645,
          1717,
          1829,
          1859,
          2344,
          3553
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 581,
        "linearizedBaseContracts": [
          581,
          1617,
          1491,
          1859,
          1829,
          2344,
          1717,
          1645,
          1433,
          3553,
          990,
          1093
        ],
        "name": "trabicCrowdSale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "trabicCrowdSale.CrowdsaleStage",
            "id": 435,
            "members": [
              {
                "id": 433,
                "name": "PreICO",
                "nodeType": "EnumValue",
                "src": "1132:6:5"
              },
              {
                "id": 434,
                "name": "ICO",
                "nodeType": "EnumValue",
                "src": "1140:3:5"
              }
            ],
            "name": "CrowdsaleStage",
            "nodeType": "EnumDefinition",
            "src": "1110:34:5"
          },
          {
            "constant": false,
            "id": 438,
            "name": "tokenSalePercentage",
            "nodeType": "VariableDeclaration",
            "scope": 581,
            "src": "1172:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 436,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1172:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 437,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1211:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 441,
            "name": "foundersPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 581,
            "src": "1217:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 439,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1217:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 440,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1256:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 444,
            "name": "foundationPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 581,
            "src": "1262:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 442,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1262:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 443,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1301:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 447,
            "name": "partnersPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 581,
            "src": "1307:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 445,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1307:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 446,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1346:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 451,
            "name": "stage",
            "nodeType": "VariableDeclaration",
            "scope": 581,
            "src": "1397:51:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
              "typeString": "enum trabicCrowdSale.CrowdsaleStage"
            },
            "typeName": {
              "contractScope": null,
              "id": 448,
              "name": "CrowdsaleStage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 435,
              "src": "1397:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                "typeString": "enum trabicCrowdSale.CrowdsaleStage"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 449,
                "name": "CrowdsaleStage",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 435,
                "src": "1427:14:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                  "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                }
              },
              "id": 450,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "PreICO",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "1427:21:5",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                "typeString": "enum trabicCrowdSale.CrowdsaleStage"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 490,
              "nodeType": "Block",
              "src": "1779:74:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 484,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 465,
                          "src": "1794:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 485,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 459,
                          "src": "1802:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1794:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43726f776446756e64696e672072656163686564204861726420436170",
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1808:31:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d3f5785d533ee2413dfed0ab1888ce002af1bf3953fec1d773ac93e301c52d",
                          "typeString": "literal_string \"CrowdFunding reached Hard Cap\""
                        },
                        "value": "CrowdFunding reached Hard Cap"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7d3f5785d533ee2413dfed0ab1888ce002af1bf3953fec1d773ac93e301c52d",
                          "typeString": "literal_string \"CrowdFunding reached Hard Cap\""
                        }
                      ],
                      "id": 483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3571,
                        3572
                      ],
                      "referencedDeclaration": 3572,
                      "src": "1786:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1786:54:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "1786:54:5"
                }
              ]
            },
            "documentation": null,
            "id": 491,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 468,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 453,
                    "src": "1641:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 469,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 455,
                    "src": "1647:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 470,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 457,
                    "src": "1655:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3121",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 471,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 467,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1433,
                  "src": "1631:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1433_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1631:31:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 473,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 459,
                    "src": "1681:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 474,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 472,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1717,
                  "src": "1665:15:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$1717_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1665:21:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 476,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 461,
                    "src": "1706:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 477,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 463,
                    "src": "1720:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 478,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 475,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1829,
                  "src": "1691:14:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1829_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1691:41:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 480,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 465,
                    "src": "1758:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 481,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 479,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1617,
                  "src": "1738:19:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$1617_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1738:26:5"
              }
            ],
            "name": "trabicCrowdSale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "1516:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "1531:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 457,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "1548:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3121",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 456,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3121,
                    "src": "1548:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3121",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 459,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "1561:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 461,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "1571:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 463,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "1592:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 465,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "1613:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1515:112:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1779:0:5"
            },
            "scope": 581,
            "src": "1491:362:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 548,
              "nodeType": "Block",
              "src": "1959:299:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 499,
                            "name": "CrowdsaleStage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "1971:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                              "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                            }
                          },
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PreICO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1971:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                            "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                            "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                          }
                        ],
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1966:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1966:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 502,
                      "name": "_stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "1996:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1966:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 511,
                              "name": "CrowdsaleStage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "2054:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                                "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ICO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2054:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                              "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                              "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                            }
                          ],
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2049:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2049:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 514,
                        "name": "_stage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 493,
                        "src": "2076:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2049:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 522,
                    "nodeType": "IfStatement",
                    "src": "2046:73:5",
                    "trueBody": {
                      "id": 521,
                      "nodeType": "Block",
                      "src": "2083:36:5",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 516,
                              "name": "stage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 451,
                              "src": "2090:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                                "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 517,
                                "name": "CrowdsaleStage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 435,
                                "src": "2098:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                                  "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                                }
                              },
                              "id": 518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ICO",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2098:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                                "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                              }
                            },
                            "src": "2090:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                              "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                            }
                          },
                          "id": 520,
                          "nodeType": "ExpressionStatement",
                          "src": "2090:26:5"
                        }
                      ]
                    }
                  },
                  "id": 523,
                  "nodeType": "IfStatement",
                  "src": "1962:157:5",
                  "trueBody": {
                    "id": 509,
                    "nodeType": "Block",
                    "src": "2004:36:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 504,
                            "name": "stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "2008:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                              "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 505,
                              "name": "CrowdsaleStage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "2016:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                                "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                              }
                            },
                            "id": 506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PreICO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2016:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                              "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                            }
                          },
                          "src": "2008:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                            "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                          }
                        },
                        "id": 508,
                        "nodeType": "ExpressionStatement",
                        "src": "2008:29:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                      "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 524,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 451,
                      "src": "2125:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                        "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 525,
                        "name": "CrowdsaleStage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "2134:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                          "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                        }
                      },
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PreICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2134:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                        "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                      }
                    },
                    "src": "2125:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                        "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                      },
                      "id": 538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 535,
                        "name": "stage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "2195:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                          "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 536,
                          "name": "CrowdsaleStage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "2204:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                            "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                          }
                        },
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ICO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2204:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                          "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                        }
                      },
                      "src": "2195:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 546,
                    "nodeType": "IfStatement",
                    "src": "2192:63:5",
                    "trueBody": {
                      "id": 545,
                      "nodeType": "Block",
                      "src": "2223:32:5",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "323530",
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2244:3:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_250_by_1",
                                  "typeString": "int_const 250"
                                },
                                "value": "250"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_250_by_1",
                                  "typeString": "int_const 250"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 539,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3644,
                                "src": "2229:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_super$_trabicCrowdSale_$581",
                                  "typeString": "contract super trabicCrowdSale"
                                }
                              },
                              "id": 541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "setRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1432,
                              "src": "2229:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2229:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 544,
                          "nodeType": "ExpressionStatement",
                          "src": "2229:19:5"
                        }
                      ]
                    }
                  },
                  "id": 547,
                  "nodeType": "IfStatement",
                  "src": "2122:133:5",
                  "trueBody": {
                    "id": 534,
                    "nodeType": "Block",
                    "src": "2156:30:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "353030",
                              "id": 531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2179:3:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_500_by_1",
                                "typeString": "int_const 500"
                              },
                              "value": "500"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_500_by_1",
                                "typeString": "int_const 500"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 528,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3644,
                              "src": "2165:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_trabicCrowdSale_$581",
                                "typeString": "contract super trabicCrowdSale"
                              }
                            },
                            "id": 530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1432,
                            "src": "2165:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2165:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 533,
                        "nodeType": "ExpressionStatement",
                        "src": "2165:18:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 549,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 496,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 495,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2278,
                  "src": "1950:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1950:9:5"
              }
            ],
            "name": "setCrowdSaleStage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 493,
                  "name": "_stage",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1927:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1926:16:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1959:0:5"
            },
            "scope": 581,
            "src": "1900:358:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 579,
              "nodeType": "Block",
              "src": "2412:180:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                      "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 552,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 451,
                      "src": "2421:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                        "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 553,
                        "name": "CrowdsaleStage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "2430:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                          "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                        }
                      },
                      "id": 554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PreICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2430:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                        "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                      }
                    },
                    "src": "2421:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                        "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "stage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "2523:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                          "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 568,
                          "name": "CrowdsaleStage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "2532:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                            "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                          }
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ICO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2532:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                          "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                        }
                      },
                      "src": "2523:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 577,
                    "nodeType": "IfStatement",
                    "src": "2519:69:5",
                    "trueBody": {
                      "id": 576,
                      "nodeType": "Block",
                      "src": "2552:36:5",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 571,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3644,
                                "src": "2560:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_super$_trabicCrowdSale_$581",
                                  "typeString": "contract super trabicCrowdSale"
                                }
                              },
                              "id": 573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_forwardFunds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1616,
                              "src": "2560:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2560:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 575,
                          "nodeType": "ExpressionStatement",
                          "src": "2560:21:5"
                        }
                      ]
                    }
                  },
                  "id": 578,
                  "nodeType": "IfStatement",
                  "src": "2418:170:5",
                  "trueBody": {
                    "id": 566,
                    "nodeType": "Block",
                    "src": "2453:60:5",
                    "statements": [
                      {
                        "assignments": [],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 557,
                            "name": "wallet",
                            "nodeType": "VariableDeclaration",
                            "scope": 580,
                            "src": "2459:15:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 556,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2459:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 558,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2459:15:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 562,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3568,
                                "src": "2496:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2496:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 559,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 557,
                              "src": "2480:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2480:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2480:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 565,
                        "nodeType": "ExpressionStatement",
                        "src": "2480:26:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev forwards funds to the wallet during the PreICO stage, then the refund vault during ICO stage",
            "id": 580,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_forwardFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2400:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2412:0:5"
            },
            "scope": 581,
            "src": "2378:214:5",
            "stateMutability": "nonpayable",
            "superFunction": 1616,
            "visibility": "internal"
          }
        ],
        "scope": 582,
        "src": "946:2052:5"
      }
    ],
    "src": "0:2999:5"
  },
  "legacyAST": {
    "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/contracts/TrabicCrowdSale.sol",
    "exportedSymbols": {
      "trabicCrowdSale": [
        581
      ]
    },
    "id": 582,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 408,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        "id": 409,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 3122,
        "src": "26:79:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Pausable.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Pausable.sol",
        "id": 410,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 3310,
        "src": "106:87:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 411,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 3208,
        "src": "194:87:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/Crowdsale.sol",
        "id": 412,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 1434,
        "src": "282:81:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "id": 413,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 1646,
        "src": "364:96:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "id": 414,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 1718,
        "src": "461:98:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/validation/TimedCrowdsale.sol",
        "id": 415,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 1830,
        "src": "560:97:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/validation/WhitelistCrowdsale.sol",
        "id": 416,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 1860,
        "src": "658:101:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 417,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 1618,
        "src": "760:104:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/admins/Desktop/Tasks/Project/Important/STO-V3/node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "../node_modules/openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 418,
        "nodeType": "ImportDirective",
        "scope": 582,
        "sourceUnit": 2345,
        "src": "865:79:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 419,
              "name": "Crowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1433,
              "src": "974:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Crowdsale_$1433",
                "typeString": "contract Crowdsale"
              }
            },
            "id": 420,
            "nodeType": "InheritanceSpecifier",
            "src": "974:9:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 421,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1645,
              "src": "984:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$1645",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 422,
            "nodeType": "InheritanceSpecifier",
            "src": "984:15:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 423,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1717,
              "src": "1001:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$1717",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 424,
            "nodeType": "InheritanceSpecifier",
            "src": "1001:15:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 425,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2344,
              "src": "1019:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2344",
                "typeString": "contract Ownable"
              }
            },
            "id": 426,
            "nodeType": "InheritanceSpecifier",
            "src": "1019:7:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 427,
              "name": "TimedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1829,
              "src": "1028:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TimedCrowdsale_$1829",
                "typeString": "contract TimedCrowdsale"
              }
            },
            "id": 428,
            "nodeType": "InheritanceSpecifier",
            "src": "1028:14:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 429,
              "name": "WhitelistCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1859,
              "src": "1045:18:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_WhitelistCrowdsale_$1859",
                "typeString": "contract WhitelistCrowdsale"
              }
            },
            "id": 430,
            "nodeType": "InheritanceSpecifier",
            "src": "1045:18:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 431,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1617,
              "src": "1066:19:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$1617",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 432,
            "nodeType": "InheritanceSpecifier",
            "src": "1066:19:5"
          }
        ],
        "contractDependencies": [
          990,
          1093,
          1433,
          1491,
          1617,
          1645,
          1717,
          1829,
          1859,
          2344,
          3553
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 581,
        "linearizedBaseContracts": [
          581,
          1617,
          1491,
          1859,
          1829,
          2344,
          1717,
          1645,
          1433,
          3553,
          990,
          1093
        ],
        "name": "trabicCrowdSale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "trabicCrowdSale.CrowdsaleStage",
            "id": 435,
            "members": [
              {
                "id": 433,
                "name": "PreICO",
                "nodeType": "EnumValue",
                "src": "1132:6:5"
              },
              {
                "id": 434,
                "name": "ICO",
                "nodeType": "EnumValue",
                "src": "1140:3:5"
              }
            ],
            "name": "CrowdsaleStage",
            "nodeType": "EnumDefinition",
            "src": "1110:34:5"
          },
          {
            "constant": false,
            "id": 438,
            "name": "tokenSalePercentage",
            "nodeType": "VariableDeclaration",
            "scope": 581,
            "src": "1172:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 436,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1172:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3730",
              "id": 437,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1211:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_70_by_1",
                "typeString": "int_const 70"
              },
              "value": "70"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 441,
            "name": "foundersPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 581,
            "src": "1217:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 439,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1217:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 440,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1256:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 444,
            "name": "foundationPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 581,
            "src": "1262:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 442,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1262:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 443,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1301:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 447,
            "name": "partnersPercentage",
            "nodeType": "VariableDeclaration",
            "scope": 581,
            "src": "1307:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 445,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1307:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3130",
              "id": 446,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1346:2:5",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10_by_1",
                "typeString": "int_const 10"
              },
              "value": "10"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 451,
            "name": "stage",
            "nodeType": "VariableDeclaration",
            "scope": 581,
            "src": "1397:51:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
              "typeString": "enum trabicCrowdSale.CrowdsaleStage"
            },
            "typeName": {
              "contractScope": null,
              "id": 448,
              "name": "CrowdsaleStage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 435,
              "src": "1397:14:5",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                "typeString": "enum trabicCrowdSale.CrowdsaleStage"
              }
            },
            "value": {
              "argumentTypes": null,
              "expression": {
                "argumentTypes": null,
                "id": 449,
                "name": "CrowdsaleStage",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 435,
                "src": "1427:14:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                  "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                }
              },
              "id": 450,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "memberName": "PreICO",
              "nodeType": "MemberAccess",
              "referencedDeclaration": null,
              "src": "1427:21:5",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                "typeString": "enum trabicCrowdSale.CrowdsaleStage"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 490,
              "nodeType": "Block",
              "src": "1779:74:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 484,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 465,
                          "src": "1794:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 485,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 459,
                          "src": "1802:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1794:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43726f776446756e64696e672072656163686564204861726420436170",
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1808:31:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7d3f5785d533ee2413dfed0ab1888ce002af1bf3953fec1d773ac93e301c52d",
                          "typeString": "literal_string \"CrowdFunding reached Hard Cap\""
                        },
                        "value": "CrowdFunding reached Hard Cap"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7d3f5785d533ee2413dfed0ab1888ce002af1bf3953fec1d773ac93e301c52d",
                          "typeString": "literal_string \"CrowdFunding reached Hard Cap\""
                        }
                      ],
                      "id": 483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3571,
                        3572
                      ],
                      "referencedDeclaration": 3572,
                      "src": "1786:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1786:54:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "1786:54:5"
                }
              ]
            },
            "documentation": null,
            "id": 491,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 468,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 453,
                    "src": "1641:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 469,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 455,
                    "src": "1647:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 470,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 457,
                    "src": "1655:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3121",
                      "typeString": "contract ERC20"
                    }
                  }
                ],
                "id": 471,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 467,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1433,
                  "src": "1631:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$1433_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1631:31:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 473,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 459,
                    "src": "1681:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 474,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 472,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1717,
                  "src": "1665:15:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$1717_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1665:21:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 476,
                    "name": "openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 461,
                    "src": "1706:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 477,
                    "name": "closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 463,
                    "src": "1720:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 478,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 475,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1829,
                  "src": "1691:14:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$1829_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1691:41:5"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 480,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 465,
                    "src": "1758:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 481,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 479,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1617,
                  "src": "1738:19:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$1617_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1738:26:5"
              }
            ],
            "name": "trabicCrowdSale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 453,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "1516:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 455,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "1531:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 457,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "1548:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3121",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 456,
                    "name": "ERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3121,
                    "src": "1548:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3121",
                      "typeString": "contract ERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 459,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "1561:9:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1561:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 461,
                  "name": "openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "1571:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 463,
                  "name": "closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "1592:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1592:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 465,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 491,
                  "src": "1613:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1515:112:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1779:0:5"
            },
            "scope": 581,
            "src": "1491:362:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 548,
              "nodeType": "Block",
              "src": "1959:299:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 499,
                            "name": "CrowdsaleStage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 435,
                            "src": "1971:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                              "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                            }
                          },
                          "id": 500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "PreICO",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1971:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                            "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                            "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                          }
                        ],
                        "id": 498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1966:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1966:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 502,
                      "name": "_stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "1996:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1966:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 511,
                              "name": "CrowdsaleStage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "2054:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                                "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "ICO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2054:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                              "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                              "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                            }
                          ],
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2049:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2049:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 514,
                        "name": "_stage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 493,
                        "src": "2076:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2049:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 522,
                    "nodeType": "IfStatement",
                    "src": "2046:73:5",
                    "trueBody": {
                      "id": 521,
                      "nodeType": "Block",
                      "src": "2083:36:5",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "id": 519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 516,
                              "name": "stage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 451,
                              "src": "2090:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                                "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 517,
                                "name": "CrowdsaleStage",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 435,
                                "src": "2098:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                                  "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                                }
                              },
                              "id": 518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "ICO",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2098:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                                "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                              }
                            },
                            "src": "2090:26:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                              "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                            }
                          },
                          "id": 520,
                          "nodeType": "ExpressionStatement",
                          "src": "2090:26:5"
                        }
                      ]
                    }
                  },
                  "id": 523,
                  "nodeType": "IfStatement",
                  "src": "1962:157:5",
                  "trueBody": {
                    "id": 509,
                    "nodeType": "Block",
                    "src": "2004:36:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 504,
                            "name": "stage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "2008:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                              "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 505,
                              "name": "CrowdsaleStage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 435,
                              "src": "2016:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                                "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                              }
                            },
                            "id": 506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "PreICO",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2016:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                              "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                            }
                          },
                          "src": "2008:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                            "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                          }
                        },
                        "id": 508,
                        "nodeType": "ExpressionStatement",
                        "src": "2008:29:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                      "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                    },
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 524,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 451,
                      "src": "2125:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                        "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 525,
                        "name": "CrowdsaleStage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "2134:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                          "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                        }
                      },
                      "id": 526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PreICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2134:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                        "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                      }
                    },
                    "src": "2125:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                        "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                      },
                      "id": 538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 535,
                        "name": "stage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "2195:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                          "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 536,
                          "name": "CrowdsaleStage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "2204:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                            "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                          }
                        },
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ICO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2204:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                          "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                        }
                      },
                      "src": "2195:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 546,
                    "nodeType": "IfStatement",
                    "src": "2192:63:5",
                    "trueBody": {
                      "id": 545,
                      "nodeType": "Block",
                      "src": "2223:32:5",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "323530",
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2244:3:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_250_by_1",
                                  "typeString": "int_const 250"
                                },
                                "value": "250"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_250_by_1",
                                  "typeString": "int_const 250"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 539,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3644,
                                "src": "2229:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_super$_trabicCrowdSale_$581",
                                  "typeString": "contract super trabicCrowdSale"
                                }
                              },
                              "id": 541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "setRate",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1432,
                              "src": "2229:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 543,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2229:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 544,
                          "nodeType": "ExpressionStatement",
                          "src": "2229:19:5"
                        }
                      ]
                    }
                  },
                  "id": 547,
                  "nodeType": "IfStatement",
                  "src": "2122:133:5",
                  "trueBody": {
                    "id": 534,
                    "nodeType": "Block",
                    "src": "2156:30:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "353030",
                              "id": 531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2179:3:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_500_by_1",
                                "typeString": "int_const 500"
                              },
                              "value": "500"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_500_by_1",
                                "typeString": "int_const 500"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 528,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3644,
                              "src": "2165:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_trabicCrowdSale_$581",
                                "typeString": "contract super trabicCrowdSale"
                              }
                            },
                            "id": 530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setRate",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1432,
                            "src": "2165:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2165:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 533,
                        "nodeType": "ExpressionStatement",
                        "src": "2165:18:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 549,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 496,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 495,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2278,
                  "src": "1950:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1950:9:5"
              }
            ],
            "name": "setCrowdSaleStage",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 493,
                  "name": "_stage",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1927:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 492,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1927:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1926:16:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1959:0:5"
            },
            "scope": 581,
            "src": "1900:358:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 579,
              "nodeType": "Block",
              "src": "2412:180:5",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                      "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 552,
                      "name": "stage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 451,
                      "src": "2421:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                        "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 553,
                        "name": "CrowdsaleStage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 435,
                        "src": "2430:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                          "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                        }
                      },
                      "id": 554,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PreICO",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "2430:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                        "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                      }
                    },
                    "src": "2421:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                        "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                      },
                      "id": 570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 567,
                        "name": "stage",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 451,
                        "src": "2523:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                          "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 568,
                          "name": "CrowdsaleStage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 435,
                          "src": "2532:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_CrowdsaleStage_$435_$",
                            "typeString": "type(enum trabicCrowdSale.CrowdsaleStage)"
                          }
                        },
                        "id": 569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "ICO",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2532:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_CrowdsaleStage_$435",
                          "typeString": "enum trabicCrowdSale.CrowdsaleStage"
                        }
                      },
                      "src": "2523:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 577,
                    "nodeType": "IfStatement",
                    "src": "2519:69:5",
                    "trueBody": {
                      "id": 576,
                      "nodeType": "Block",
                      "src": "2552:36:5",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 571,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3644,
                                "src": "2560:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_super$_trabicCrowdSale_$581",
                                  "typeString": "contract super trabicCrowdSale"
                                }
                              },
                              "id": 573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "_forwardFunds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1616,
                              "src": "2560:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                "typeString": "function ()"
                              }
                            },
                            "id": 574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2560:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 575,
                          "nodeType": "ExpressionStatement",
                          "src": "2560:21:5"
                        }
                      ]
                    }
                  },
                  "id": 578,
                  "nodeType": "IfStatement",
                  "src": "2418:170:5",
                  "trueBody": {
                    "id": 566,
                    "nodeType": "Block",
                    "src": "2453:60:5",
                    "statements": [
                      {
                        "assignments": [],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 557,
                            "name": "wallet",
                            "nodeType": "VariableDeclaration",
                            "scope": 580,
                            "src": "2459:15:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 556,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2459:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 558,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2459:15:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 562,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3568,
                                "src": "2496:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2496:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 559,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 557,
                              "src": "2480:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2480:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2480:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 565,
                        "nodeType": "ExpressionStatement",
                        "src": "2480:26:5"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev forwards funds to the wallet during the PreICO stage, then the refund vault during ICO stage",
            "id": 580,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "_forwardFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2400:2:5"
            },
            "payable": false,
            "returnParameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2412:0:5"
            },
            "scope": 581,
            "src": "2378:214:5",
            "stateMutability": "nonpayable",
            "superFunction": 1616,
            "visibility": "internal"
          }
        ],
        "scope": 582,
        "src": "946:2052:5"
      }
    ],
    "src": "0:2999:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf731836": {
          "anonymous": false,
          "inputs": [],
          "name": "CrowdsaleFinalized",
          "type": "event",
          "signature": "0x9270cc390c096600a1c17c44345a1ba689fafd99d97487b10cfccf86cf731836"
        },
        "0x46711e222f558a07afd26e5e71b48ecb0a8b2cdcd40faeb1323e05e2c76a2f32": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "prevClosingTime",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "newClosingTime",
              "type": "uint256"
            }
          ],
          "name": "TimedCrowdsaleExtended",
          "type": "event",
          "signature": "0x46711e222f558a07afd26e5e71b48ecb0a8b2cdcd40faeb1323e05e2c76a2f32"
        },
        "0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "purchaser",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "beneficiary",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "value",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "TokensPurchased",
          "type": "event",
          "signature": "0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b"
        },
        "0xee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistedAdded",
          "type": "event",
          "signature": "0xee1504a83b6d4a361f4c1dc78ab59bfa30d6a3b6612c403e86bb01ef2984295f"
        },
        "0x270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistedRemoved",
          "type": "event",
          "signature": "0x270d9b30cf5b0793bbfd54c9d5b94aeb49462b8148399000265144a8722da6b6"
        },
        "0x22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd20961299": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistAdminAdded",
          "type": "event",
          "signature": "0x22380c05984257a1cb900161c713dd71d39e74820f1aea43bd3f1bdd20961299"
        },
        "0x0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e165": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelistAdminRemoved",
          "type": "event",
          "signature": "0x0a8eb35e5ca14b3d6f28e4abf2f128dbab231a58b56e89beb5d636115001e165"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        },
        "0x25f05eb2b87548a4d5f3b374af0482149441d4fe9264ff9be277dc1d37a3bf1a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelisterAdded",
          "type": "event",
          "signature": "0x25f05eb2b87548a4d5f3b374af0482149441d4fe9264ff9be277dc1d37a3bf1a"
        },
        "0x8514ebf39bc709d98437cc704235ba0864bfdae7563b87a6583d2920cf2e8354": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "account",
              "type": "address"
            }
          ],
          "name": "WhitelisterRemoved",
          "type": "event",
          "signature": "0x8514ebf39bc709d98437cc704235ba0864bfdae7563b87a6583d2920cf2e8354"
        }
      },
      "links": {},
      "address": "0x226380691982e1D6CC72f580ea7c66CEeE29928d",
      "transactionHash": "0x48ff4861315ec9fc3c48d6073bcb11d6721b6e0f21a5623a6786e27c9b4e8692"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-12T13:26:16.293Z",
  "devdoc": {
    "methods": {
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "cap()": {
        "return": "the cap of the crowdsale."
      },
      "capReached()": {
        "details": "Checks whether the cap has been reached.",
        "return": "Whether the cap was reached"
      },
      "claimRefund(address)": {
        "details": "Investors can claim refunds here if crowdsale is unsuccessful",
        "params": {
          "refundee": "Whose refund will be claimed."
        }
      },
      "closingTime()": {
        "return": "the crowdsale closing time."
      },
      "finalize()": {
        "details": "Must be called after crowdsale ends, to do some extra finalization work. Calls the contract's finalization function."
      },
      "finalized()": {
        "return": "true if the crowdsale is finalized, false otherwise."
      },
      "goal()": {
        "return": "minimum amount of funds to be raised in wei."
      },
      "goalReached()": {
        "details": "Checks whether funding goal was reached.",
        "return": "Whether funding goal was reached"
      },
      "hasClosed()": {
        "details": "Checks whether the period in which the crowdsale is open has already elapsed.",
        "return": "Whether crowdsale period has elapsed"
      },
      "isOpen()": {
        "return": "true if the crowdsale is open, false otherwise."
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "openingTime()": {
        "return": "the crowdsale opening time."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "rate()": {
        "return": "the number of token units a buyer gets per wei."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "token()": {
        "return": "the token being sold."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      },
      "wallet()": {
        "return": "the address where funds are collected."
      },
      "weiRaised()": {
        "return": "the amount of wei raised."
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "setRate(uint256)": {
        "notice": "// Added by Nasir due to need of changes in Rate of Token ////"
      }
    }
  }
}